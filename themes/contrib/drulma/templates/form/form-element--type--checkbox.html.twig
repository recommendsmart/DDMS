{#
/**
 * @file
 * Drulma theme implementation for a checkbox form element.
 */
#}
{%
  set classes = [
    'control',
    'js-form-item',
    'form-item',
    'js-form-type-' ~ type|clean_class,
    'form-item-' ~ name|clean_class,
    'js-form-item-' ~ name|clean_class,
    title_display not in ['after', 'before'] ? 'form-no-label',
    disabled == 'disabled' ? 'form-disabled',
    errors ? 'form-item--error',
  ]
%}
{%
  set description_classes = [
    'description',
    'help',
    description_display == 'invisible' ? 'visually-hidden',
  ]
%}
<div{{ attributes.addClass(classes) }}>
  {% if prefix is not empty %}
    <span class="field-prefix">{{ prefix }}</span>
  {% endif %}
  {% if description_display == 'before' and description.content %}
    <div{{ description.attributes }}>
      {{ description.content }}
    </div>
  {% endif %}

  {# Render the label directly from this template #}
  {%
    set label_attributes = create_attribute(label['#attributes']).addClass([
      'checkbox',
      label['#title_display'] == 'after' ? 'option',
      label['#required'] ? 'js-form-required',
      label['#required'] ? 'form-required',
    ])
  %}
  {%
    set label_text_attributes = create_attribute({
      'class': [label['#title_display'] == 'invisible' ? 'visually-hidden']
    })
  %}
  <label{{ label_attributes }}>
    {{ children }}
    <span{{label_text_attributes}}>{{ label['#title'] }}</span>

  </label>

  {% if suffix is not empty %}
    <span class="field-suffix">{{ suffix }}</span>
  {% endif %}

  {% if errors %}
    <div class="form-item--error-message">
      {{ errors }}
    </div>
  {% endif %}
  {% if description_display in ['after', 'invisible'] and description.content %}
    <div{{ description.attributes.addClass(description_classes) }}>
      {{ description.content }}
    </div>
  {% endif %}
</div>
