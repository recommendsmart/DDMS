<?php

namespace Drupal\{{ machine_name }}\Plugin\Action;

use Drupal\Core\Access\AccessResult;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Session\AccountInterface;
use Drupal\eca\Plugin\Action\ConfigurableActionBase;
{% if options %}
use Drupal\eca\Plugin\OptionsInterface;
{% endif %}

/**
 * Describes the {{ machine_name }} {{ id }} action.
 *
 * @Action(
 *   id = "{{ machine_name }}_{{ id }}",
 *   label = @Translation("{{ purpose }}"){% if type %},
 *   type = "{{ type }}"{% endif %}
 * )
 */
class {{ class }} extends ConfigurableActionBase {% if options %}implements OptionsInterface {% endif %}{

  /**
   * {@inheritdoc}
   */
  public function access($object, ?AccountInterface $account = NULL, $return_as_object = FALSE) {
    $access_result = AccessResult::allowed();
    return $return_as_object ? $access_result : $access_result->isAllowed();
  }

  /**
   * {@inheritdoc}
   */
  public function execute({% if type %}${{ type }} = NULL{% endif %}) {
    // @todo implement the required action.
  }

  /**
   * {@inheritdoc}
   */
  public function defaultConfiguration(): array {
    return [
      'field1' => '',
{% if options %}
      'field2' => '',
{% endif %}
    ] + parent::defaultConfiguration();
  }

  /**
   * {@inheritdoc}
   */
  public function buildConfigurationForm(array $form, FormStateInterface $form_state): array {
    $form['field1'] = [
      '#type' => 'textfield',
      '#title' => $this->t('Label of field 1'),
      '#default_value' => $this->configuration['field1'],
    ];
{% if options %}
    $form['field2'] = [
      '#type' => 'select',
      '#title' => $this->t('Label of field 2'),
      '#options' => $this->getOptions('field2'),
      '#default_value' => $this->configuration['field2'],
    ];
{% endif %}
    return parent::buildConfigurationForm($form, $form_state);
  }

  /**
   * {@inheritdoc}
   */
  public function submitConfigurationForm(array &$form, FormStateInterface $form_state): void {
    $this->configuration['field1'] = $form_state->getValue('field1');
{% if options %}
    $this->configuration['field2'] = $form_state->getValue('field2');
{% endif %}
    parent::submitConfigurationForm($form, $form_state);
  }

{% if options %}
  /**
   * {@inheritdoc}
   */
  public function getOptions(string $id): ?array {
    switch ($id) {
      case 'field2':
        return [
          'option1' => $this->t('Label 1'),
          'option2' => $this->t('Label 2'),
          'option3' => $this->t('Label 3'),
        ];
    }
    return NULL;
  }

{% endif %}
}
