<?php

/**
 * @file
 * Install, update and uninstall functions for the field_suggestion module.
 */

/**
 * Create entity type.
 */
function field_suggestion_update_8001(&$sandbox) {
  /** @var \Drupal\Core\Extension\ModuleInstallerInterface $installer */
  $installer = \Drupal::service('module_installer');

  $installer->install(['dynamic_entity_reference']);

  \Drupal::entityTypeManager()->clearCachedDefinitions();

  foreach (['field_suggestion_type', 'field_suggestion'] as $entity_type_id) {
    \Drupal::entityDefinitionUpdateManager()->installEntityType(
      \Drupal::entityTypeManager()->getDefinition($entity_type_id)
    );
  }
}

/**
 * Create bundles.
 */
function field_suggestion_update_8002(&$sandbox) {
  if (!isset($sandbox['total'])) {
    $sandbox['fields'] = [];

    $config = \Drupal::config('field_suggestion.settings');

    foreach ((array) $config->get('fields') as $entity_type_id => $field_names) {
      foreach ($field_names as $field_name) {
        $sandbox['fields'][] = [$entity_type_id, $field_name];
      }
    }

    if (($sandbox['total'] = count($sandbox['fields'])) === 0) {
      return;
    }

    $sandbox['processed'] = 0;
    $sandbox['bundles'] = [];
  }

  [$entity_type_id, $field_name] = $sandbox['fields'][$sandbox['processed']++];

  /** @var \Drupal\Core\Entity\EntityFieldManagerInterface $manager */
  $manager = \Drupal::service('entity_field.manager');

  $field = $manager->getBaseFieldDefinitions($entity_type_id)[$field_name];

  if (!in_array($field_type = $field->getType(), $sandbox['bundles'])) {
    /** @var \Drupal\field_suggestion\Service\FieldSuggestionHelperInterface $helper */
    $helper = \Drupal::service('field_suggestion.helper');

    $helper->bundle($field_type);

    $sandbox['bundles'][] = $field_type;
  }

  $sandbox['#finished'] = $sandbox['processed'] / $sandbox['total'];
}
