<?php

/**
 * @file
 * Contains assessments.module.
 */

use Drupal\Core\Render\Element;
use Drupal\Core\Entity\Display\EntityFormDisplayInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Config\FileStorage;

/**
 * Implements hook_views_data_alter().
 */
function anu_lms_assessments_views_data_alter(array &$data) {
  $data['assessment_question_result']['assessment_result']['relationship'] = [
    'title' => t('Quiz result'),
    'label' => t('Quiz result'),
    'group' => 'Question result',
    'help' => t('Reference to the quiz result for question results'),
    'id' => 'standard',
    'base' => 'assessment_result',
    'base field' => 'aqrid',
    'field' => 'id',
  ];

  $data['assessment_question']['assessment_question_result']['relationship'] = [
    'title' => t('Question result'),
    'label' => t('Question result'),
    'group' => 'Question',
    'help' => t('Reference to the Question result'),
    'id' => 'standard',
    'base' => 'assessment_question_result',
    'base field' => 'aqid__target_id',
    'field' => 'id',
  ];
}

/**
 * Workaround to show translatable fields inside nested paragraphs.
 *
 * @param array $entity_form
 *   Nested array of form elements that comprise the entity form.
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 *   The form state of the parent form.
 */
function anu_lms_assessments_inline_entity_form_entity_form_alter(array &$entity_form, FormStateInterface $form_state) {
  $children = Element::children($entity_form);

  foreach ($children as $field_name) {
    if (!empty($entity_form[$field_name]['#multilingual']) && $entity_form[$field_name]['#multilingual']) {
      $entity_form[$field_name]['#access'] = TRUE;
    }
  }
}

/**
 * Implements hook_entity_form_display_alter().
 *
 * From
 * https://www.drupal.org/forum/support/module-development-and-code-questions/2017-05-14/how-to-specifymodify-form-view-mode#comment-13458568
 * Use hook_entity_form_mode_alter() after Drupal 9.2.0.
 */
function anu_lms_assessments_entity_form_display_alter(?EntityFormDisplayInterface &$form_display, array $context) {
  if ($context['entity_type'] === 'paragraph' && $context['bundle'] === 'course_modules') {
    $storage = Drupal::service('entity_type.manager')
      ->getStorage('entity_form_display');
    $quiz = $storage->load('paragraph.course_modules.quiz');
    if ($quiz) {
      $form_display = $storage->load('paragraph.course_modules.quiz');
    }
  }
}

/**
 * Implements hook_install().
 *
 * If "anu_lms_permissions" was already installed then necessary import
 * optional configs from that module. Optional configs from that module
 * contains dependencies to "node.type.module_assessment".
 */
function anu_lms_assessments_install() {
  $moduleHandler = \Drupal::service('module_handler');
  if (!$moduleHandler->moduleExists('anu_lms_permissions')) {
    return;
  }

  // It's "Organization: Group node (Quiz)".
  $config_name = 'group.content_type.group_content_type_d342280e2d680';

  $config_storage = \Drupal::service('config.storage');
  if (!$config_storage->exists($config_name)) {
    $config_path = Drupal::service('extension.path.resolver')
      ->getPath('module', 'anu_lms_permissions') . '/config/optional';

    $source = new FileStorage($config_path);
    $config_storage->write($config_name, $source->read($config_name));
  }
}
