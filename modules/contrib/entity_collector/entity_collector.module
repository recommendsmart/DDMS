<?php

/**
 * Implements hook_theme().
 */
function entity_collector_theme() {
  $theme = [];
  $theme['entity_collection'] = [
    'render element' => 'elements',
    'file' => 'entity_collection.page.inc',
  ];
  $theme['entity_collection_content_add_list'] = [
    'render element' => 'content',
    'variables' => ['content' => NULL],
    'file' => 'entity_collection.page.inc',
  ];
  $theme['entity_collection_add_entity_field'] = [
    'variables' => [
      'link' => NULL,
      'view_mode' => NULL,
    ],
  ];
  $theme['entity_collection_remove_entity_field'] = [
    'variables' => [
      'link' => NULL,
      'view_mode' => NULL,
    ],
  ];
  $theme['entity_collection_remove_participant'] = [
    'variables' => [
      'link' => NULL,
      'view_mode' => NULL,
    ],
  ];
  return $theme;
}

/**
 * Implements hook_theme_suggestions_HOOK().
 */
function entity_collector_theme_suggestions_entity_collection(array $variables) {
  $suggestions = [];
  /** @var \Drupal\entity_collector\Entity\EntityCollectionInterface $entity */
  $entity = $variables['elements']['#entity_collection'];
  $sanitized_view_mode = str_replace('.', '_', $variables['elements']['#view_mode']);

  $suggestions[] = 'entity_collection__' . $sanitized_view_mode;
  $suggestions[] = 'entity_collection__' . $entity->bundle();
  $suggestions[] = 'entity_collection__' . $entity->bundle() . '__' . $sanitized_view_mode;
  $suggestions[] = 'entity_collection__' . $entity->id();
  $suggestions[] = 'entity_collection__' . $entity->id() . '__' . $sanitized_view_mode;
  return $suggestions;
}

/**
 * Implements hook_preprocess_HOOK().
 */
function entity_collector_preprocess_field(&$variables) {
  if (!isset($variables['element']['#entity_type']) || $variables['element']['#entity_type'] !== 'entity_collection' || $variables['element']['#field_type'] !== 'entity_reference') {
    return;
  }

  /** @var \Drupal\entity_collector\Entity\EntityCollectionInterface $entityCollection */
  $entityCollection = $variables['element']['#object'];
  /** @var \Drupal\entity_collector\Entity\EntityCollectionTypeInterface $entityCollectionType */
  $entityCollectionType = \Drupal::service('entity_type.manager')
    ->getStorage('entity_collection_type')
    ->load($entityCollection->bundle());

  if (!$entityCollectionType || $variables['field_name'] !== $entityCollectionType->getSourceFieldName()) {
    return;
  }

  $variables['attributes']['class'][] = 'js-entity-collection-items';
  $variables['attributes']['class'][] = 'entity-collection-type-' . $entityCollectionType->id();
  $variables['attributes']['class'][] = 'entity-collection-' . $entityCollection->id();
  $variables['attributes']['data-entity-collection'] = $entityCollection->id();
  $variables['attributes']['data-entity-collection-type'] = $entityCollectionType->id();
  foreach ($variables['items'] as &$item) {
    $item['content']['#pre_render'][] = '_entity_collector_prerender_item';
    $item['content']['#source'] = $entityCollectionType->getSource();
  }
}

/**
 * Implements hook_entity_collector_preprocess_block
 */
function entity_collector_preprocess_block(&$variables) {
  if ($variables['plugin_id'] === 'entity_collection_block') {
    $variables['attributes']['data-block-id'] = $variables['elements']['#id'];
  }
}

/**
 * Add some attributes to make sure we know it is a collection item.
 *
 * @param $variables
 *
 * @return mixed
 */
function _entity_collector_prerender_item($variables) {
  $variables['#cache']['contexts'][] = 'route.name';

  $variables['#attributes']['class'][] = 'js-entity-collection-item';

  /** @var \Drupal\entity_collector\Entity\EntityCollectionInterface $entity */
  $entity = NULL;

  if (isset($variables['#object'])) {
    $entity = $variables['#object'];
  }

  if ($entity === NULL && isset($variables['#entity'])) {
    $entity = $variables['#entity'];
  }

  $key = '#' . $variables['#source'];
  if ($entity === NULL && isset($variables[$key])) {
    $entity = $variables['#' . $variables['#source']];
  }

  if ($entity === NULL) {
    return $variables;
  }

  $variables['#attributes']['data-entity-id'] = $entity->id();

  return $variables;
}
