<?php

/**
 * @file
 * Provides the main code for the designs module.
 */

use Drupal\Core\Render\Element;
use Drupal\Core\Template\Attribute;

/**
 * Implements hook_theme().
 */
function designs_theme() {
  return [
    'design' => [
      'render element' => 'element',
    ],
  ];
}

/**
 * Implements hook_library_info_build().
 */
function designs_library_info_build() {
  return \Drupal::service('plugin.manager.design')->getLibraryImplementations();
}

/**
 * Implements hook_preprocess().
 */
function designs_preprocess_design(&$variables, $hook) {
  $element = $variables['element'];

  /** @var \Drupal\designs\DesignInterface $design */
  $design = $element['#design'];
  $plugin = $design->getPluginDefinition();

  // Provide the values needed for the design twig template.
  $variables['design'] = [
    'id' => $design->getPluginId(),
    'path' => $plugin->getPath() . '/' . $plugin->getTemplate(),
    'libraries' => $plugin->getRenderAttached(),
  ];

  /** @var \Drupal\Core\Render\RendererInterface $renderer */
  $renderer = \Drupal::service('renderer');

  // Get the settings to compare against.
  $settings = $plugin->getSettings();

  // Copy the element children to the variable for display.
  $variables['vars'] = [];
  foreach (Element::children($variables['element']) as $key) {
    if (isset($element[$key]['#attributes']) &&
      $element[$key]['#attributes'] instanceof Attribute) {
      $variables['vars'][$key] = &$variables['element'][$key]['#attributes'];
    }
    elseif (isset($settings[$key])) {
      $variables['element'][$key]['#printed'] = FALSE;
      $variables['vars'][$key] = $renderer->render($variables['element'][$key]);
    }
    else {
      $variables['vars'][$key] = &$variables['element'][$key];
    }
  }
}

/**
 * Implements hook_theme_suggestions_HOOK().
 */
function designs_theme_suggestions_design(array $variables) {
  $suggestions = [];
  $element = $variables['element'];
  /** @var \Drupal\designs\DesignInterface|null $design */
  $design = $element['#design'] ?? NULL;
  if ($design) {
    $suggestions[] = 'design__' . $design->getPluginDefinition()->getTemplateId();
  }
  return $suggestions;
}
