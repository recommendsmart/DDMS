<?php

/**
 * @file
 * Contains entity_list.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function entity_list_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the entity_list module.
    case 'help.page.entity_list':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Drupal 8 ecedi_list port. Allows users to generate entity lists from the back office.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function entity_list_theme($existing, $type, $theme, $path) {
  return [
    'entity_list_table' => [
      'variables' => [
        'header' => NULL,
        'rows' => NULL,
        'footer' => NULL,
        'attributes' => [],
        'caption' => NULL,
        'colgroups' => [],
        'sticky' => FALSE,
        'responsive' => TRUE,
        'empty' => '',
      ],
    ],
    'region_table' => [
      'variables' => [
        'header' => NULL,
        'rows' => NULL,
        'footer' => NULL,
        'attributes' => [],
        'caption' => NULL,
        'colgroups' => [],
        'sticky' => FALSE,
        'responsive' => TRUE,
        'empty' => '',
      ],
    ],
    'entity_list_item' => [
      'variables' => [
        'element' => NULL,
        'attributes' => [],
        'list_id' => '',
      ],
    ],
    'entity_list_sortable_filters' => [
      'render element' => 'form',
    ],
  ];
}

/**
 * Prepares variables for entity list table templates.
 *
 * Default template: entity-list-table.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - elements: An associative array containing a Form API structure to be
 *     rendered as a table.
 */
function template_preprocess_entity_list_table(array &$variables) {
  template_preprocess_table($variables);
}

/**
 * Prepares variables for entity list table templates.
 *
 * Default template: entity-list-table.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - elements: An associative array containing a Form API structure to be
 *     rendered as a table.
 */
function template_preprocess_region_table(array &$variables) {
  template_preprocess_table($variables);
}

/**
 * Helper function to get the current pager infos.
 *
 * @param int $element
 *   The pager id (default to 0).
 *
 * @return array
 *   An array representing the pager infos.
 */
function entity_list_get_pager_infos($element = 0) {

  $pager = Drupal::service('pager.manager')->getPager($element);

  $infos = [
    'nb_pages' => $pager->getTotalPages(),
  ];

  $infos['total'] = $total = $pager->getTotalItems();
  // Pages start at 0 so add 1.
  $infos['current_page'] = $current_page = $pager->getCurrentPage() + 1;
  $last_page = intval($pager->getTotalPages());
  $limit = $pager->getLimit();
  $infos['start'] = $limit * ($current_page - 1) + 1;

  // Only one page.
  if ($last_page == 1) {
    $infos['start'] = 1;
    $infos['end'] = $total;
  }
  // More than one page.
  else {
    // Last page.
    if ($current_page == $last_page) {
      $max = $limit * $last_page;
      $offset = $max - $total;
      $infos['end'] = ($limit - $offset) + $limit * ($current_page - 1);
    }
    // First page.
    elseif ($current_page == 1) {
      $infos['start'] = 1;
      $infos['end'] = $limit;
    }
    // Any middle page.
    else {
      $infos['end'] = $current_page * $limit;
    }
  }
  return $infos;
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function entity_list_theme_suggestions_entity_list_item_alter(array &$suggestions, array $variables) {
  $suggestions[] = 'entity_list_item__' . $variables['list_id'];
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function entity_list_theme_suggestions_form_alter(array &$suggestions, array $variables) {
  if (!empty($variables['element']['#form_id']) && $variables['element']['#form_id'] === 'entity_list_filter_form') {
    $suggestions[] = 'form__entity_list_filter_form';
    $suggestions[] = 'form__entity_list_filter_form__' . $variables['element']['#attributes']['data-entity-list-id'];
  }
}
