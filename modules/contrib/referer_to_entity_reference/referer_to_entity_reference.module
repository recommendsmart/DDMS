<?php

/**
 * @file
 * Implements setting default value from Referer HTTP value.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Symfony\Component\HttpFoundation\Request;
use Drupal\Core\Url;
use Drupal\Core\Render\Element;

/**
 * Implements hook_help().
 */
function referer_to_entity_reference_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the referer_to_entity_reference module.
    case 'help.page.referer_to_entity_reference':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Turns HTTP Referer field into an entity reference default value') . '</p>';
      return $output;

    default:
  }
}


/**
 * Implements hook_form_FORM_ID_alter().
 */
function referer_to_entity_reference_form_node_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  $node = $form_state->getFormObject()->getEntity();
  foreach (Element::children($form) as $element) {
    if ($node->hasField($element)) {
      $config = $node->getFieldDefinition($element);
      if ($config->getType() == 'entity_reference' && method_exists($config, 'getThirdPartySettings')) {
        $set_default = $config->getThirdPartySetting('referer_to_entity_reference', 'default_from_referer');
        $has_default = !empty($form['field_revision']['widget'][0]['target_id']['#default_value']);
        if ($set_default && ! $has_default) {
          $request = \Drupal::request();
          $referer = $request->headers->get('referer');
          // Quit early when we see a self-reference
          if (strpos($referer, '/node/add/') !== FALSE)
            return;
          // Getting the base url.
          $base_url = Request::createFromGlobals()->getSchemeAndHttpHost();
          // Getting the alias or the relative path.
          $alias = substr($referer, strlen($base_url));
          // Getting the node.
          $params = Url::fromUri("internal:" . $alias)->getRouteParameters();
          if (!empty($params)) {
            $entity_type = key($params);
            $referenced_node = \Drupal::entityTypeManager()->getStorage($entity_type)->load($params[$entity_type]);
            if (!empty($referenced_node)) {
              $form['field_revision']['widget'][0]['target_id']['#default_value'] = $referenced_node;
            }
          }
        }
      }
    }
  }
}


/**
 * Implements hook_form_FORM_ID_alter().
 */
function referer_to_entity_reference_form_field_config_edit_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  $field = $form_state->getFormObject()->getEntity();
  if ($field->getType() === 'entity_reference') {
    $form['default_value']['default_from_referer'] = [
      '#type' => 'checkbox',
      '#title' => t('Set value from HTTP Referer field if it matches a valid url for an entity on your site.'),
      '#default_value' => $field->getThirdPartySetting('referer_to_entity_reference', 'default_from_referer'),
    ];
    $form['#entity_builders'][] = 'referer_to_entity_default_value_builder';
  }
}


/**
 * Entity builder for the set default value from referer configuration entity.
 */
function referer_to_entity_default_value_builder($entity_type, \Drupal\field\Entity\FieldConfig $field, &$form, \Drupal\Core\Form\FormStateInterface $form_state) {
  if ($form_state->getValue(['default_value_input', 'default_from_referer'])) {
    $field->setThirdPartySetting('referer_to_entity_reference', 'default_from_referer', $form_state->getValue(['default_value_input', 'default_from_referer']));
  }
  else {
    $field->unsetThirdPartySetting('referer_to_entity_reference', 'default_from_referer');
  }
}
