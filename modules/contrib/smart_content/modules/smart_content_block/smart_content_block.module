<?php

/**
 * @file
 * Contains smart_content_block.module.
 */

use Drupal\block\BlockInterface;
use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
use Drupal\Component\Plugin\Exception\PluginNotFoundException;
use Drupal\Core\Entity\EntityStorageException;
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function smart_content_block_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the smart_content_block module.
    case 'help.page.smart_content_block':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('My Awesome Module') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_ENTITY_TYPE_insert().
 *
 * Adds the newly created smart block as a dependency to the smart variation
 * set configuration. This is required because when the smart variation set is
 * first created, the block config does not exist to add as a dependency.
 */
function smart_content_block_block_insert(BlockInterface $block) {
  if ($block->getPluginId() === 'smart_block') {
    $settings = $block->get('settings');
    if (isset($settings['variation_set'])) {
      $logger = \Drupal::logger('smart_content');
      $id = $settings['variation_set'];
      try {
        /** @var \Drupal\smart_content\Entity\SmartVariationSet $variation_set */
        $variation_set = \Drupal::entityTypeManager()
          ->getStorage('smart_variation_set')
          ->load($id);
      }
      catch (PluginNotFoundException | InvalidPluginDefinitionException $e) {
        $logger->error($e->getTraceAsString());
        return;
      }
      $variation_set->calculateDependencies();
      try {
        $variation_set->save();
      }
      catch (EntityStorageException $e) {
        $logger->error($e->getTraceAsString());
      }
    }
  }
}
