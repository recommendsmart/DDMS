<?php

/**
 * @file
 * Install, update and uninstall functions for the social_geolocation module.
 */

use Drupal\user\Entity\Role;
use Drupal\search_api\Entity\Index;
use Drupal\user\Entity\User;

/**
 * Implements hook_install().
 */
function social_geolocation_install() {
  $indexes = [
    'social_users',
    'social_groups',
    'social_content',
    'social_all',
  ];

  // Disable indexes on install. This is because we first need to install
  // our dependencies. Otherwise config override will destroy search api.
  // Also see social_tagging.install.
  foreach ($indexes as $key => $index) {
    /* @var Drupal\search_api\Entity\Index $index */
    $index = Index::load($index);
    if (!$index instanceof Index) {
      \Drupal::logger('social_geolocation')->info('Invalid search index');
      return;
    }
    \Drupal::logger('social_geolocation')->info('Loaded search index');

    // If currently enabled we will first disabled and enable the index.
    if ($index !== NULL && $index->status()) {
      \Drupal::logger('social_geolocation')->info('Search index exists');

      // Elevate permissions so we can index *all* the items.
      $accountSwitcher = Drupal::service('account_switcher');
      $account = User::load(1);
      $accountSwitcher->switchTo($account);

      // Disable and enable the index so the social_geolocation field is properly added.
      $index->disable()->save();
      \Drupal::logger('social_geolocation')->info('Search index disabled');
      $index->enable()->save();
      \Drupal::logger('social_geolocation')->info('Search index enabled');

      // Restore user account.
      $accountSwitcher->switchBack();
    }
  }

  // Enable permissions.
  _social_geolocation_set_permissions();

  // Make sure for new installations we choose the free OSM version.
  \Drupal::service('config.factory')->getEditable('social_geolocation.settings')
    ->set('geolocation_provider', 'openstreetmaps')->save();
}

/**
 * This hook won't do anything and is needed only to make sure next one is 8003.
 */
function social_geolocation_update_8002(&$sandbox) {
}

/**
 * Function to set default permissions.
 */
function _social_geolocation_set_permissions() {
  $roles = Role::loadMultiple();

  /** @var \Drupal\user\Entity\Role $role */
  foreach ($roles as $role) {
    if ($role->id() === 'administrator') {
      continue;
    }

    if ($role->id() === 'sitemanager') {
      user_role_grant_permissions('sitemanager', ['set social geolocation settings']);
    }
  }
}
