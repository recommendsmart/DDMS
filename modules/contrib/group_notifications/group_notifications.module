<?php

/**
 * @file
 * Group notifications module file.
 */

use Drupal\Component\Render\PlainTextOutput;
use Drupal\Core\Session\AccountInterface;
use Drupal\group\Entity\GroupInterface;
use Drupal\group\Entity\GroupContentInterface;

/**
 * Implements hook_ENTITY_TYPE_insert().
 *
 * Reacts on the insertion of a 'Group content' item.
 */
function group_notifications_group_content_insert(GroupContentInterface $entity) {
  $group_content_type = $entity->getGroupContentType();
  if ($group_content_type->get('content_plugin') === 'group_membership') {
    $currentUser = Drupal::currentUser();
    /** @var \Drupal\Core\Session\AccountInterface $account */
    $account = $entity->getEntity();
    if ($account && $account->id() !== $currentUser->id()) {
      $group = $entity->getGroup();
      _group_notifications_mail_notify('membership_added', $account, $group);
    }
  }
}

/**
 * Implements hook_ENTITY_TYPE_delete().
 *
 * Reacts on the removal of a 'Group content' item.
 */
function group_notifications_group_content_delete(GroupContentInterface $entity) {
  $group_content_type = $entity->getGroupContentType();
  if ($group_content_type->get('content_plugin') === 'group_membership') {
    /** @var \Drupal\Core\Session\AccountInterface $account */
    $account = $entity->getEntity();
    if ($account) {
      $group = $entity->getGroup();
      _group_notifications_mail_notify('membership_removed', $account, $group);
    }
  }
}

/**
 * Conditionally create and send a notification email regarding Groups.
 *
 * @param string $op
 *   The operation being performed on the account. Possible values:
 *   - 'membership_removed': Group membership is removed.
 *
 * @param \Drupal\Core\Session\AccountInterface $account
 *   The user object of the account being notified.
 *
 * @param \Drupal\group\Entity\GroupInterface $group
 *   The group object of the group membership.
 *
 * @return array|null
 *   An array containing various information about the message.
 *   See \Drupal\Core\Mail\MailManagerInterface::mail() for details.
 *
 * @see _user_mail_notify()
 */
function _group_notifications_mail_notify(string $op, AccountInterface $account, GroupInterface $group) {
  if (Drupal::config('group_notifications.mail')->get($op . '.enabled')) {
    $params = [
      'account' => $account,
      'group' => $group,
    ];
    $langcode = $account->getPreferredLangcode();
    // Get the custom site notification email to use as the from email address
    // if it has been set.
    $site_mail = Drupal::config('system.site')->get('mail_notification');
    // If the custom site notification email has not been set, we use the site
    // default for this.
    if (empty($site_mail)) {
      $site_mail = Drupal::config('system.site')->get('mail');
    }
    if (empty($site_mail)) {
      $site_mail = ini_get('sendmail_from');
    }
    $mail = Drupal::service('plugin.manager.mail')->mail('group_notifications', $op, $account->getEmail(), $langcode, $params, $site_mail);
  }
  return empty($mail) ? NULL : $mail['result'];
}

/**
 * Implements hook_mail().
 */
function group_notifications_mail($key, &$message, $params) {
  $token_service = Drupal::token();
  $language_manager = Drupal::languageManager();
  $langcode = $message['langcode'];
  $variables = [
    'user' => $params['account'],
    'group' => $params['group'],
  ];

  $language = $language_manager->getLanguage($params['account']->getPreferredLangcode());
  $original_language = $language_manager->getConfigOverrideLanguage();
  $language_manager->setConfigOverrideLanguage($language);
  $mail_config = Drupal::config('group_notifications.mail');

  $token_options = [
    'langcode' => $langcode,
    'callback' => 'user_mail_tokens',
    'clear' => TRUE,
  ];
  $message['subject'] .= PlainTextOutput::renderFromHtml($token_service->replace($mail_config->get($key . '.mail.subject'), $variables, $token_options));
  $message['body'][] = $token_service->replace($mail_config->get($key . '.mail.body'), $variables, $token_options);

  $language_manager->setConfigOverrideLanguage($original_language);
}
