<?php

use Drupal\group\Entity\Group;
use Drupal\content_to_group\Util\ContentToGroupUtility;
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function content_to_group_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the content_to_group module.
    case 'help.page.content_to_group':
      $output = '';
      $output .= '<h2>' . t('About') . '</h2>';
      $output .= '<p>' . t('The Content to Group module adds content to group using a referenced group field, this is happen during the save or update of the content.') . '</p>';
      $output .= '<p>';
      $output .= t('Visit the <a href=":project_link">Project page</a> on Drupal.org for more information.', [
        ':project_link' => 'https://www.drupal.org/project/content_to_group',
      ]);
      $output .= '</p>';

      return $output;
  }
}

/**
 * Implement hook_node_insert
 *
 * @param \Drupal\node\NodeInterface $node
 */
// todo add to group when update
// todo include other content type
function content_to_group_node_insert(Drupal\node\NodeInterface $node) {
  $config = \Drupal::service('config.factory')
    ->getEditable('content_to_group.settings');
  $types = array_keys($config->get('types'));
  if (in_array($node->bundle(), $types)) {
    $contentToGroupUtility = new ContentToGroupUtility(\Drupal::entityTypeManager());
    $field = $contentToGroupUtility->getGroupField($node);
    if ($field !== NULL) {
      if ($node->id()) {
        $route_name = \Drupal::routeMatch()->getRouteName();
        if ($route_name != 'entity.group_content.create_form') {
          $gid = $node->get($field)
            ->getValue()[0]["target_id"];
          $group = Group::load($gid);
          if ($group !== NULL) {
            $type = 'group_node:' . $node->getType();
            // Check if its not already in the group
            $relation = $group->getContentByEntityId($type, $node->id());
            if (!$relation) {
              $group->addContent($node, $type);
            }
          }
        }
      }
    }
  }
}

/**
 * Implement hook_node_update
 */
function content_to_group_node_update(Drupal\node\NodeInterface $node) {
  $config = \Drupal::service('config.factory')
    ->getEditable('content_to_group.settings');
  $types = array_keys($config->get('types'));
  if (in_array($node->bundle(), $types)) {
    $contentToGroupUtility = new ContentToGroupUtility(\Drupal::entityTypeManager());
    $field = $contentToGroupUtility->getGroupField($node);
    if ($field !== NULL) {
      if ($node->id()) {
        $route_name = \Drupal::routeMatch()->getRouteName();
        if ($route_name != 'entity.group_content.create_form') {
          $gid = $node->get($field)
            ->getValue()[0]["target_id"];
          $group = Group::load($gid);
          if ($group !== NULL) {
            $type = 'group_node:' . $node->getType();
            // Check if its not already in the group
            $relation = $group->getContentByEntityId($type, $node->id());
            if (!$relation) {
              // Search other existing relations
              $group_contents = $contentToGroupUtility->getGroupContent($node);
              // add to new group
              $group->addContent($node, $type);
              // Remove other relations
              if ($group_contents) {
                foreach ($group_contents as $group_content) {
                  $group_content->delete();
                  Drupal::logger('content_to_group')
                    ->notice('Removed ' . $node->getType() . ': "' . $node->label() . '" from group: "' . $group_content->getGroup()
                        ->label() . '"');
                }
              }
            }
          }
        }
      }
    }
  }
}

